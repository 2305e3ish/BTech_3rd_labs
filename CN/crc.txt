### CRC Code Explanation (For Updated crc_code.c)

---

#### How the Code Works

1. **User Input:**
   - The user enters the transmitted data and received data as binary strings (e.g., "11011").
   - The user selects the CRC type: "crc-12", "crc-16", or "ccitt".

2. **Polynomial Selection:**
   - The code selects the correct polynomial and width based on the CRC type:
     - CRC-12: 0x80F (degree 12)
     - CRC-16: 0x11021 (degree 16, but division uses 17 bits for the leading 1)
     - CCITT:  0x11021 (same as CRC-16 in this code)

3. **Appending Zeros:**
   - The code appends (width-1) zeros to the end of the data string before division, as required by the CRC algorithm.

4. **Modulo-2 Division (Bitwise XOR):**
   - The code treats the input as a bitstream (not ASCII).
   - It performs bitwise division (modulo-2) using XOR, just like long division in binary.
   - For each bit, if the current bit is 1, it XORs the next `width` bits with the polynomial.

5. **Remainder Extraction:**
   - After division, the last (width-1) bits are the CRC remainder.
   - This remainder is the CRC code to be transmitted.

6. **Transmission and Checking:**
   - The CRC is appended to the transmitted data.
   - At the receiver, the same division is performed on the received data (with CRC).
   - If the final remainder is zero, the data is considered correct.

7. **Output:**
   - The code prints the CRC in binary format (with leading zeros).
   - It prints whether the received data is correct or not.

---

#### Example Flow

- **Input:**  
  Transmitted data: `11011`  
  CRC type: `crc-16`

- **Process:**  
  - Append 16 zeros: `11011000000000000000`
  - Divide by polynomial using XOR (step-by-step, as in manual)
  - Remainder is the CRC code (e.g., `1010001101011010`)
  - Append CRC to data and check at receiver

- **Output:**  
  ```
  CRC is: 1010001101011010
  Data received right.
  ```

---

#### Why This Matches the Manual

- The code uses the same polynomial and division logic as shown in the manual's step-by-step example.
- The output CRC and checking process will match the manual for any input and supported CRC type.

---

#### Summary Table (for quick reference)

| CRC Type   | Polynomial (hex) | Degree | Used In         |
|------------|------------------|--------|-----------------|
| CRC-12     | 0x80F            | 12     | Telecom         |
| CRC-16     | 0x11021          | 16     | USB, Modbus     |
| CRC-CCITT  | 0x11021          | 16     | X.25, HDLC      |

---

**This code is suitable for lab experiments and matches textbook/manual